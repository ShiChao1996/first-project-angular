/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './modal-header';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from './modal';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/common/src/directives/ng_if';
import * as import12 from '@angular/core/src/linker/template_ref';
var renderType_ModalHeaderComponent_Host:import0.RenderComponentType = (null as any);
class _View_ModalHeaderComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _ModalHeaderComponent_0_4:import3.ModalHeaderComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ModalHeaderComponent_Host0,renderType_ModalHeaderComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('modal-header',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_ModalHeaderComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ModalHeaderComponent_0_4 = new import3.ModalHeaderComponent(this.parentInjector.get(import8.ModalComponent));
    this._appEl_0.initComponent(this._ModalHeaderComponent_0_4,[],compView_0);
    compView_0.create(this._ModalHeaderComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.ModalHeaderComponent) && (0 === requestNodeIndex))) { return this._ModalHeaderComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_ModalHeaderComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_ModalHeaderComponent_Host === (null as any))) { (renderType_ModalHeaderComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_ModalHeaderComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const ModalHeaderComponentNgFactory:import10.ComponentFactory<import3.ModalHeaderComponent> = new import10.ComponentFactory<import3.ModalHeaderComponent>('modal-header',viewFactory_ModalHeaderComponent_Host0,import3.ModalHeaderComponent);
const styles_ModalHeaderComponent:any[] = [];
var renderType_ModalHeaderComponent:import0.RenderComponentType = (null as any);
class _View_ModalHeaderComponent0 extends import1.AppView<import3.ModalHeaderComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import2.AppElement;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import11.NgIf;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ModalHeaderComponent0,renderType_ModalHeaderComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','modal-header');
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import2.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import12.TemplateRef_(this._appEl_3,viewFactory_ModalHeaderComponent1);
    this._NgIf_3_6 = new import11.NgIf(this._appEl_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this.renderer.projectNodes(this._el_1,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_5 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5,
      this._text_6
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import11.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.showClose;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_3_6.ngIf = currVal_0;
      this._expr_0 = currVal_0;
    }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_ModalHeaderComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.ModalHeaderComponent> {
  if ((renderType_ModalHeaderComponent === (null as any))) { (renderType_ModalHeaderComponent = viewUtils.createRenderComponentType('/Users/doug/Source/dougludlow/ng2-bs3-modal/src/ng2-bs3-modal/components/modal-header.ts class ModalHeaderComponent - inline template',1,import9.ViewEncapsulation.None,styles_ModalHeaderComponent,{})); }
  return new _View_ModalHeaderComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_ModalHeaderComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ModalHeaderComponent1,renderType_ModalHeaderComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'button',(null as any));
    this.renderer.setElementAttribute(this._el_0,'aria-label','Close');
    this.renderer.setElementAttribute(this._el_0,'class','close');
    this.renderer.setElementAttribute(this._el_0,'data-dismiss','modal');
    this.renderer.setElementAttribute(this._el_0,'type','button');
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'span',(null as any));
    this.renderer.setElementAttribute(this._el_2,'aria-hidden','true');
    this._text_3 = this.renderer.createText(this._el_2,'Ã—',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.modal.dismiss()) !== false);
    return (true && pd_0);
  }
}
function viewFactory_ModalHeaderComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_ModalHeaderComponent1(viewUtils,parentInjector,declarationEl);
}